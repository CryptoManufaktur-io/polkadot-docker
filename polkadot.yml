x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 20m
      max-file: "3"

services:
  polkadot:
    build:
      context: ./polkadot
      dockerfile: ${DOCKERFILE}
      args:
        - DOCKER_TAG=${DOCKER_TAG:-latest}
        - DOCKER_REPO=${DOCKER_REPO:-parity/polkadot}
        - BUILD_TARGET=${BUILD_TARGET:-master}
        - SRC_REPO=${SRC_REPO:-https://github.com/paritytech/polkadot-sdk}
    image: polkadot:local
    pull_policy: never
    user: polkadot
    restart: unless-stopped
    volumes:
      - polkadot-data:/data
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${P2P_PORT}:${P2P_PORT}/tcp
      - ${RPC_PORT}:${RPC_PORT}/tcp
    environment:
      - EXTRAS=${EXTRAS:-}
      - NODE_KEY_FILE=${NODE_KEY_FILE:-}
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"
    <<: *logging
    entrypoint:
      - docker-entrypoint.sh
      - polkadot
      - --base-path
      - /data
      - --database
      - auto
      - --chain
      - ${NETWORK}
      - --name
      - ${NODE_NAME}
      - --state-pruning
      - "1000"
      - --blocks-pruning
      - archive-canonical
      - --rpc-port
      - ${RPC_PORT}
      - --rpc-external
      - --rpc-cors
      - all
      - --rpc-methods
      - unsafe
      - --rpc-max-request-size
      - "1000"
      - --rpc-max-response-size
      - "1000"
      - --port
      - ${P2P_PORT}
      - --prometheus-port
      - "6060"
      - --prometheus-external
      - --telemetry-url
      - "wss://telemetry.polkadot.io/submit/ 0"
      - --log
      - ${LOG_LEVEL}
  
    labels:
      - traefik.enable=true
      - traefik.http.routers.${RPC_HOST}.service=${RPC_HOST}
      - traefik.http.routers.${RPC_HOST}.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST}.rule=Host(`${RPC_HOST}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST}.tls.certresolver=letsencrypt
      - traefik.http.routers.${RPC_HOST}lb.service=${RPC_HOST}
      - traefik.http.routers.${RPC_HOST}lb.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST}lb.rule=Host(`${RPC_LB}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${RPC_HOST}.loadbalancer.server.port=${RPC_PORT}
      - metrics.scrape=true
      - metrics.path=/metrics
      - metrics.port=6060
      - metrics.instance=polkadot
      - metrics.network=${NETWORK}

  create-staking-keys:
    profiles: ["tools"]
    build:
      context: ./subkey
      dockerfile: Dockerfile.source
    image: subkey:local
    pull_policy: never
    volumes:
      - ./keys:/data/keys
    entrypoint: ["/bin/bash","-c"]
    environment:
      - NETWORK=${NETWORK:-}
    command:
      - |
        subkey generate --network polkadot --keystore-path /data/keys --output-type json > /data/keys/stash.json
        subkey generate --network polkadot --keystore-path /data/keys --output-type json > /data/keys/proxy.json

volumes:
  polkadot-data:
